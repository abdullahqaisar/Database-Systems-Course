create database SciGen
use[SciGen]

CREATE TABLE Users(
UserId INT PRIMARY KEY IDENTITY(1,1),
UserType VARCHAR(20) NOT NULL,
UserName NVARCHAR(20) NOT NULL
)

CREATE TABLE Accounts(
AccountId INT PRIMARY KEY IDENTITY(1,1),
username VARCHAR(50) NOT NULL,
emailAddress VARCHAR(50) NOT NULL,
phoneNumber INT,
dateOfBirth DATE NOT NULL,
password NVARCHAR(20) NOT NULL,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE PremiumAccount(
PremiumFeatures VARCHAR(50),
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Wallet(
WalletId INT PRIMARY KEY IDENTITY(1,1),
WalletAmount INT,
AccountId INT,
FOREIGN KEY (AccountId) REFERENCES Accounts(AccountId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE addressInformation(
FullAddress NVARCHAR(50) NOT NULL,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Payment_Method(
PaymentId INT PRIMARY KEY IDENTITY(1,1),
methodName VARCHAR(20) NOT NULL,
payment_amount INT NOT NULL,
AccountId INT,
WalletId INT,
FOREIGN KEY (AccountId) REFERENCES Accounts(AccountId),
FOREIGN KEY (WalletId) REFERENCES Wallet(WalletId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Upgraded_plan(
PlanId INT PRIMARY KEY IDENTITY(1,1),
PlanInfo VARCHAR(20) NOT NULL,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Admin(
AdminId INT PRIMARY KEY IDENTITY(1,1),
AdminPass NVARCHAR(20) NOT NULL,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Investors(
investors_id INT PRIMARY KEY IDENTITY(1,1),
UserId INT,
InvestmentRequests nvarchar,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Scientists(
ScientistId INT PRIMARY KEY IDENTITY(1,1),
UserId INT,
Ratings INT CONSTRAINT OneDigit CHECK (Ratings between 0 and 5), 
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Consultants(
ConsultancyId INT PRIMARY KEY IDENTITY(1,1),
consultancy_requests VARCHAR(20) NOT NULL,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Reviewer(
ReviewerId INT PRIMARY KEY IDENTITY(1,1),
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE ToReview( 
PostId int Not NULL, 
Stauts varchar(20) Not NUll ,
ReviewerId INT,
FOREIGN KEY (ReviewerId) REFERENCES Reviewer(ReviewerId)
ON DELETE CASCADE
ON UPDATE CASCADE 
)

CREATE TABLE Regular_User(
rgUserId INT PRIMARY KEY IDENTITY(1,1),
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Post(
PostId INT PRIMARY KEY IDENTITY(1,1),
PostTime  DATETIME,
CommentsCount INT,
LikesCount INT,
ShareCount INT,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Ads(
ad_id INT PRIMARY KEY IDENTITY(1,1),
PostId INT,
FOREIGN KEY (PostId) REFERENCES Post(PostId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Revenue(
Revenue_id INT PRIMARY KEY IDENTITY(1,1),
PostId INT,
revenue VARCHAR(50) NOT NULL,
FOREIGN KEY (PostId) REFERENCES Post(PostId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Feedback(
feedback_id INT PRIMARY KEY IDENTITY(1,1),
SubmissionTime DATETIME,
Details VARCHAR(50) NOT NULL,
ScreenShot VARBINARY(MAX),
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Query(
QueryData VARCHAR(50) NOT NULL,
QueryTime DATETIME,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Events(
event_id INT PRIMARY KEY IDENTITY(1,1),
EventTime dateTime,
Pictures VARBINARY(MAX),
EventDetails VARCHAR(50) NOT NULL,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Groups(
group_id INT PRIMARY KEY IDENTITY(1,1),
GroupName VARCHAR(50) NOT NULL,
groupMembers NVARCHAR(50) NOT NULL,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Chats(
Chat_id INT PRIMARY KEY IDENTITY(1,1),
ChatData varchar(100) NOT NULL,
ChatTime DATETIME,
UserId INT,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Comments(
CommentId INT PRIMARY KEY IDENTITY(1,1),
datetime date,
PostId INT,
FOREIGN KEY (PostId) REFERENCES Post(PostId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE Likes(
likes_id INT PRIMARY KEY IDENTITY(1,1),
PostId INT,
FOREIGN KEY (PostId) REFERENCES Post(PostId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE CommentReplies(
CommentReply_id INT PRIMARY KEY IDENTITY(1,1),
CommentTime dateTime,
CommentId INT,
FOREIGN KEY (CommentId) REFERENCES Comments(CommentId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE TextPost(
TextPostID INT PRIMARY KEY IDENTITY(1,1),
Text NVARCHAR(50) NOT NULL,
PostId INT,
FOREIGN KEY (PostId) REFERENCES Post(PostId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE VideoPost(
VideoPostID INT PRIMARY KEY IDENTITY(1,1),
Video VARBINARY(MAX) NOT NULL,
Description VARCHAR(50),
PostId INT,
FOREIGN KEY (PostId) REFERENCES Post(PostId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE PhotoPost(
PhotoPostID INT PRIMARY KEY IDENTITY(1,1),
Photo VARBINARY(MAX) NOT NULL,
Description VARCHAR(50),
PostId INT,
FOREIGN KEY (PostId) REFERENCES Post(PostId)
ON DELETE CASCADE
ON UPDATE CASCADE
)

